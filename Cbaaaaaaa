            self.head = new_node
        else:
            current = self.head
            while current.next and current.next.patient.priority <= patient.priority:
                current = current.next
            new_node.next = current.next
            current.next = new_node

    def pop(self):
        if self.head:
            treated_patient = self.head.patient
            self.head = self.head.next
            return treated_patient
        else:
            print("Antrian kosong. Tidak ada pasien untuk dirawat.")

    def remove(self, name):
        current = self.head
        if current and current.patient.name == name:
            self.head = current.next
            return

        prev = None
        while current and current.patient.name != name:
            prev = current
            current = current.next

        if current is None:
            print(f"Pasien dengan nama {name} tidak ditemukan.")
            return

        prev.next = current.next

    def peek(self):
        if self.head:
            return self.head.patient
        else:
            print("Antrian kosong. Tidak ada pasien untuk ditampilkan.")

    def is_empty(self):
        return not self.head

# Contoh penggunaan
queue = PriorityQueue()

patient1 = Patient("Gian", 2)
patient2 = Patient("Kezia", 1)
patient3 = Patient("Alexis", 3)

queue.push(patient1)
queue.push(patient2)
queue.push(patient3)

print("Pasien dengan prioritas tertinggi:", queue.peek().name)

treated_patient = queue.pop()
print("Pasien yang dirawat:", treated_patient.name)

queue.remove("Gian")

if queue.is_empty():
    print("Antrian Kosong.")
else:
    print("Antrian tidak Kosong.")
